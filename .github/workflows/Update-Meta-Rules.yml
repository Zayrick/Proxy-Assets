name: Update Meta Rules

# 工作流触发条件
on:
  schedule:
    - cron: '0 7 * * *'  # 每天早上7点运行
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  # 处理所有规则：在单一作业中处理所有规则
  process-rules:
    runs-on: ubuntu-latest
    
    steps:
      # 设置时间戳，用于标记此次更新
      - name: Set timestamp
        id: set-timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
        
      # 检出当前仓库
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # 只拉取最新的一次提交，减少下载量
          
      # 配置Git用户信息，为后续提交做准备
      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
            
      # 从MetaCubeX/meta-rules-dat仓库克隆Meta规则
      - name: Clone Meta Rules
        uses: actions/checkout@v4
        with:
          repository: MetaCubeX/meta-rules-dat  # 要克隆的仓库
          ref: meta  # 克隆meta分支
          path: meta_temp  # 克隆到meta_temp目录
          fetch-depth: 1  # 只拉取最新的一次提交
          
      # 处理所有规则文件（直接在克隆的目录中处理）
      - name: Process All Rules
        run: |
          echo "开始处理所有规则文件..."
          
          # 准备目标目录
          mkdir -p rule-set/repo
          
          # 处理IPv6规则
          echo "处理IPv6规则..."
          if [ -d "meta_temp/geo/geoip/classical" ]; then
            find meta_temp/geo/geoip/classical -name "*.list" -type f -exec sed -i 's/^IP-CIDR,\([^,]*:\)/IP-CIDR6,\1/g' {} \;
          fi
          
          # 处理ASN规则
          echo "处理ASN规则..."
          if [ -d "meta_temp/asn" ]; then
            mkdir -p meta_temp/asn/classical
            
            # 查找asn目录中的所有.list文件
            find meta_temp/asn -maxdepth 1 -name "*.list" -type f | while read file; do
              filename=$(basename "$file")
              # 创建新的处理后文件
              cat "$file" | awk '{
                if ($0 ~ /^#/ || $0 ~ /^$/) {
                  print $0  # 保留注释和空行
                } else if ($0 ~ /:/) {
                  print "IP-CIDR6," $0  # IPv6地址添加IP-CIDR6前缀
                } else {
                  print "IP-CIDR," $0  # IPv4地址添加IP-CIDR前缀
                }
              }' > "meta_temp/asn/classical/$filename"
            done
          fi
          
          # 复制处理后的文件到目标目录
          echo "复制所有处理后的文件到rule-set/repo目录..."
          cp -r meta_temp/* rule-set/repo/
          
          # 清理临时目录
          echo "清理临时目录..."
          rm -rf meta_temp

      # 检查是否有文件变更
      - name: Check for changes
        id: check_changes
        run: |
          git add rule-set/repo/
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
      
      # 如果有变更，则提交并推送
      - name: Commit and push changes
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git commit -m "Chore: Update Meta Rules"
          git push 